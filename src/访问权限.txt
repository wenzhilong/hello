访问权限：
public的class、interface可以被其他任何类访问；public的字段、方法可以被其他类访问，前提是拥有访问类的权限。

private的字段、方法无法被其他类访问，private 访问权限被限定在class的内部，而且与方法声明的顺序无关。推荐把private方法放到后面。

Java支持内部类，内部类拥有访问private的权限。

protected作用于继承关系，定义为protected的字段和方法可以被子类、子类的子类访问。

package作用域是指一个类允许访问同一个package的没有public、private修饰的class、以及没有public、protected、private修饰的字段和方法。
只要在同一个包，就可以访问package权限的class、filed和method。

包名必须完全一致，包没有父子关系。com.apache和com.apache.abc是两个完全不同的包。

注：如果不能确定是否需要public，就不声明public；一个.java文件只能包含一个public类，可以包含多个非public类。

局部变量：
1、在方法内部定义的变量，
2、参数列表，
3、代码块。
局部变量的作用域从变量声明处开始到对应的块结束。


final修饰符：
final与访问权限不冲突。
1、用final修饰的class不能被继承；
2、用final修饰的方法不能被覆写；
2、用final修饰的字段、局部变量不能被重新赋值。（常量）


classpath：JVM用到的一个环境变量，它用来指示JVM如何搜索class（路径和顺序）。
classpath就是一组目录的集合，它设置的搜索路径与操作系统相关，例如：
在Windows系统上，用;分隔，带空格的目录用""括起来，可能长这样：
C:\work\project1\bin;C:\shared;"D:\My Documents\project1\bin"

在Linux系统上，用:分隔，可能长这样：
/usr/shared:/usr/local/bin:/home/liaoxuefeng/bin

如果JVM在某个路径下找到了class文件，就不再往后继续搜索，如果所有路径下都找不到，就报错。

classpath的设置方法有两种：但最好的做法是 不 设置classpath，始终通过-cp命令传入。


jar包：
jar包实际上就是一个zip格式的压缩文件，而jar包相当于目录，可以包含很多.class文件。
jar包的第一层目录不能是bin

字符串在String内部是通过一个char[]数组表示的：
Java中char是2个字节的Unicode编码，因此String在内存中是Unicode编码。
转换编码就是将String和byte[]转换，需要指定编码。
String转换编码之后，就不再是char类型，而是byte类型表示的数组。转换为byte[]时，始终优先考虑UTF-8编码。


不变类：
1、定义class时使用final，无法派生子类；
2、每个字段使用final，保证创建实例之后无法修改任何字段。


BigDecimal的比较：
使用compareTo()比较两个BigDecimal的值，不要用equals()！